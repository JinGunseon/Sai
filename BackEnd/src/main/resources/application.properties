spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
spring.datasource.url=jdbc:mariadb://127.0.0.1:3306/sai?characterEncoding=utf8
spring.datasource.username=root
spring.datasource.password=root

# 엔티티 클래스를 기준으로 테이블과 알맞는 타입의 컬럼을 자동으로 생성
spring.jpa.generate-ddl=true
#update the schema with the given values.
spring.jpa.hibernate.ddl-auto=update

#To beautify or pretty print the SQL
spring.jpa.properties.hibernate.format_sql=true
#show sql
spring.jpa.properties.hibernate.show-sql=true


spring.jpa.open-in-view=false
#show parameter binding
logging.level.org.hibernate.type.descriptor.sql=trace

logging.level.org.hibernate.SQL=DEBUG

# 스웨거 설정
spring.mvc.pathmatch.matching-strategy=ant-path-matcher

# business mail information setting
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=ssafy.sai@gmail.com
spring.mail.password= uhtwuhtuottwwzkn
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.auth=true

# Security OAuth
spring.security.oauth2.client.registration.naver.client-id=
spring.security.oauth2.client.registration.naver.client-secret=
spring.security.oauth2.client.registration.naver.client-authentication-method=post
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.redirect-uri=
spring.security.oauth2.client.registration.naver.scope=nickname, email, profile_image
spring.security.oauth2.client.registration.naver.client-name=Naver

spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri==https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response



